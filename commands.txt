###########################
######### GIT #############
###########################
git init {initialize empty git repo}
git status {show files with recent changes}
git add -A {adds all changes to staging area}
git commit -m '[message]' {commits staged files with a message}
(^ saves localy)

git push origin <branch_name> {pushes commits on github}
(^ saves on server i.e github)

git pull origin master {pulls all commited changes of team members}

git checkout -- . {restores files from previous checkpoint}
git checkout <existing_branch> {switch to existing branch}
git checkout -b <new_branch> {create and switch to new branch}

git remote -v {shows the fetch and push addresses}
git remote add origin [url]
git remote set-url origin [copied url of empty shell repo] {changes the push address to our repo}

###########################
######### SSH #############
###########################

ssh -X server@192.168.100.24 {-X gives permission to display images}{run on terminal}
sftp://server1@192.168.100.24 {directory access} {run on ctrl+l}
smb://192.168.100.169/sharing/ {sharing}

###########################
######## DOCKER ###########
###########################

docker images [display all docker images]
docker ps [display running dockers]

docker build -t <name:tag> . -f docker.yml [-t is for tag]
nvidia_docker_run -d -it <name:tag> [-d is for detached]
docker exec -it <image> /bin/bash {e.g docker exec -t ffe /bin/bash}

docker logs <docker name>

docker ps | awk {' print $1 '} | tail -n+2 > tmp.txt; for line in $(cat tmp.txt); do docker kill $line; done; rm tmp.txt

docker save -o <path for generated tar file> <image name>

sudo systemctl daemon-reload
sudo systemctl restart docker

alias nvidia_docker_run="xhost + && nvidia-docker run --rm -ti --net=host --ipc=host --shm-size=8gb -e DISPLAY=$DISPLAY -v /tmp:/tmp -v /tmp/.X11-unix:/tmp/.X11-unix --ulimit core=-1 --security-opt seccomp=unconfined -v /:/app"

alias docker_run="xhost + && docker run --rm -ti --net=host --cpuset-cpus=0,1 --ipc=host -e DISPLAY=$DISPLAY -v /tmp/.X11-unix:/tmp/.X11-unix -v /tmp:/tmp --ulimit core=-1 --security-opt seccomp=unconfined --device /dev/dri:/dev/dri -v /:/app"

###########################
######## CAM-ID ###########
###########################
1)mubeen
rtsp://admin:admin123@192.168.100.3:554

###########################
######## TERMINAL #########
###########################
for oldname in *; do newname=`echo $oldname | sed -e 's/ //g'`; mv "$oldname" "$newname"; done {remove space in all filnames in a folder}
rename  's/#/somethingelse/' * {rename '#' -> something else}
shuf -n 10 -e * | xargs -i mv {} path-to-new-folder {moves 10 random files from current directory to new folder}
for file in *.jpg; do mv "$file" "${file/.png/_1.png}"; done |OR| for FILENAME in *; do mv $FILENAME 5_$FILENAME; done {rename all files ==> selects all jpg files and adds '_1' in all jpg filenames |OR| adds '5_' at start of each filename}

Change format
	mogrify -format jpg *.png
	ls -1 *.png | xargs -n 1 bash -c 'convert "$0" "${0%.*}.jpg"'
	for i in *.png ; do convert "$i" "${i%.*}.jpg" ; done

LIST ABSOLUTE PATH OF ALL FILES IN A TXT FILE
	ls -d "$PWD"/* > train.txt

DIFFERENCE OF TWO FOLDER FILE WISE (FILENAME AND EXTENSION MUST BE SAME)
	diff -q dir1 dir2 { -q Report only whether the files differ, not the details of the differences.}
					   { -r recursively compare any subdirectories found.}

CHANGE EXTENSION ONLY
	rename "s/.txt$/.jpg/" *.txt
	rename "s/.jpg$/.txt/" *.jpg

READ FILENAMES FROM A TEXT FILE AND MOVE THEM TO ANOTHER FOLDER
	for filename in `cat files.txt`; do mv $filename /root/testing2/moved/; done

RENAME ALL FILES IN SEQUENTIAL NUMBER FORM
	a=1
	for i in *.txt; do
	  new=$(printf "%03d.txt" "$a") #04 pad to length of 4
	  mv -i -- "$i" "$new"
	  let a=a+1
	done

ls dirname | shuf -n 5 >> out.txt {gives five random files from a folder and write their names in out.txt}
ls -l /dev/disk/by-id/mmc-SD16G_0x00000123-part8 {check permissions-OMAR}
for i in *.txt; do name=${i%.*}; echo $name; echo "$name.jpg" `cat $i` >> train.txt; done {merge all text files in one}
xargs rm -r <rmv_list.txt {read a text file and remove all file names from a folder}
for file in ./*; do mv "$file" "${file/video/}"; done [rmv video from all filenames]
ls -F |grep -v / | wc -l {list of files in a folder}

###########################
######## ffmpeg ###########
###########################
ffmpeg -i input.avi -c copy -f segment -segment_time 30 -reset_timestamps 1 %03d.mp4 {splits a video into multiple 60 sec videos}
ffmpeg -i video.mp4 -r 1 frame_%6d.jpg {splits video into image per frame where r=1 means 1 frame per second}
ffmpeg -r 1/5 -i img%03d.png -c:v libx264 -vf fps=25 -pix_fmt yuv420p out.mp4 {joins all frames into a video}
ffmpeg -i input.mp4 -vcodec libx265 -crf 28 output.mp4 {reduce size of video / compress video}
ffmpeg -i <RTSP PATH> -r 0.1 -ss 00:00:00 -t 3600 video.mp4 {video recording,-r for frame rate}

###########################
###### Deployments ########
###########################
RUN.sh :
	echo admin123 | sudo -S /opt/lampp/lampp start
	docker-compose down --volumes && docker-compose up
STARTUP APP command
	gnome-terminal --working-directory="/home/pioneer/bagCounting/" --command="./run.sh"


###########################
######## model ############
###########################
FASTER RCNN
python3 demo/demo_yolo.py \
    --config-file configs/COCO-Detection/faster_rcnn_X_101_32x8d_FPN_3x.yaml \
    --input ../inputs/ \
    --opts MODEL.WEIGHTS weights/model_final_68b088.pkl

python3 /opt/intel/openvino_2021/deployment_tools/model_optimizer/mo.py --input_model $1 --input_shape [1,3,512,512] --mean_values [103.53,116.28,123.675] --scale_values [57.375,57.12,58.395] --model_name $2 --output_dir openvino/ --data_type FP16